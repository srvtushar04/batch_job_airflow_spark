version: "3.9"

x-airflow-common: &airflow-common
  image: apache/airflow:2.9.3-python3.11
  environment:
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "true"
    AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: 30
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
    AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.basic_auth"
    PYTHONPATH: /opt/airflow
    # Snowflake passthrough (optional)
    SNOWFLAKE_ACCOUNT: ${SNOWFLAKE_ACCOUNT:-}
    SNOWFLAKE_USER: ${SNOWFLAKE_USER:-}
    SNOWFLAKE_PASSWORD: ${SNOWFLAKE_PASSWORD:-}
    SNOWFLAKE_WAREHOUSE: ${SNOWFLAKE_WAREHOUSE:-}
    SNOWFLAKE_DATABASE: ${SNOWFLAKE_DATABASE:-}
    SNOWFLAKE_SCHEMA: ${SNOWFLAKE_SCHEMA:-PUBLIC}
    SNOWFLAKE_ROLE: ${SNOWFLAKE_ROLE:-}
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/scripts:/opt/airflow/scripts
    - ./airflow/requirements.txt:/requirements.txt
    - ./data:/opt/airflow/data
    - ./configs:/opt/airflow/configs
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-0}"
  depends_on:
    - postgres
    - redis

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      retries: 5
    ports: ["5432:5432"]

  redis:
    image: redis:7
    ports: ["6379:6379"]

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command: -c "mkdir -p /opt/airflow/data/raw /opt/airflow/data/processed /opt/airflow/data/final && pip install --no-cache-dir -r /requirements.txt && airflow db init && airflow users create --username airflow --password airflow --firstname Air --lastname Flow --role Admin --email admin@example.com || true"

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports: ["8080:8080"]
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler

volumes:
  airflow_data:
    driver: local
